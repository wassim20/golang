basePath: /api
definitions:
  ApiResponse:
    description: Generic API response
    properties:
      data: {}
      responseKey:
        type: string
    type: object
  CompaniesDetails:
    description: CompaniesDetails represents detailed information about a specific
      company.
    properties:
      createdAt:
        description: CreatedAt is the timestamp indicating when the company entry
          was created.
        type: string
      email:
        description: Email is the email address associated with the company.
        type: string
      id:
        description: ID is the unique identifier for the company.
        type: string
      name:
        description: Name is the name of the company.
        type: string
      website:
        description: Website is the website URL of the company.
        type: string
    type: object
  CompaniesPagination:
    description: CompaniesPagination represents the paginated list of companies.
    properties:
      items:
        description: Items is a slice containing individual company details.
        items:
          $ref: '#/definitions/CompaniesTable'
        type: array
      limit:
        description: Limit is the maximum number of items per page in the pagination.
        type: integer
      page:
        description: Page is the current page number in the pagination.
        type: integer
      totalCount:
        description: TotalCount is the total number of companies in the entire list.
        type: integer
    type: object
  CompaniesTable:
    description: CompaniesTable represents a single company entry in a table.
    properties:
      createdAt:
        description: CreatedAt is the timestamp indicating when the company entry
          was created.
        type: string
      email:
        description: Email is the email address associated with the company.
        type: string
      id:
        description: ID is the unique identifier for the company.
        type: string
      name:
        description: Name is the name of the company.
        type: string
    type: object
  CompanyIn:
    description: CompanyIn represents the input structure for creating a new company.
    properties:
      name:
        description: Name is the name of the company. It is required and should be
          between 3 and 30 characters.
        maxLength: 30
        minLength: 3
        type: string
    required:
    - name
    type: object
  LoggedIn:
    description: LoggedIn represents the user details after successful login.
    properties:
      ID:
        description: ID is the unique identifier for the user.
        type: string
      email:
        description: Email is the email address of the user.
        type: string
      name:
        description: Name is the name of the user.
        type: string
      profilePicture:
        description: ProfilePicture is the URL or path to the user's profile picture.
        type: string
      workCompanyId:
        description: CompanyID is the unique identifier for the user's company.
        type: string
    type: object
  LoggedInResponse:
    description: LoggedInResponse represents the response structure after successful
      login.
    properties:
      accessToken:
        description: AccessToken is the token obtained after successful login for
          authentication purposes.
        type: string
      user:
        allOf:
        - $ref: '#/definitions/LoggedIn'
        description: User is the structure containing details of the logged-in user.
    type: object
  NotificationsCount:
    description: NotificationsCount represents the count of notifications.
    properties:
      count:
        description: Count is the number of notifications.
        type: integer
    type: object
  NotificationsDetails:
    description: NotificationsDetails represents detailed information about a specific
      notification.
    properties:
      content:
        description: Content is the textual content of the notification.
        type: string
      createdAt:
        description: CreatedAt is the timestamp indicating when the notification was
          created.
        type: string
      id:
        description: ID is the unique identifier for the notification.
        type: string
      seen:
        description: Seen is a boolean indicating whether the notification has been
          seen or not.
        type: boolean
      type:
        description: Type is the type or category of the notification.
        type: string
    type: object
  NotificationsIn:
    description: NotificationsIn represents the input structure for updating the "seen"
      status of notifications.
    properties:
      seen:
        description: Seen is a boolean indicating whether the notification has been
          seen or not. It is required.
        type: boolean
    required:
    - seen
    type: object
  RolesCount:
    description: RolesCount represents the count of roles.
    properties:
      count:
        description: Count is the number of roles.
        type: integer
    type: object
  RolesDetails:
    description: RolesDetails represents detailed information about a specific role.
    properties:
      companyID:
        description: CompanyID is the unique identifier for the company associated
          with the role.
        type: string
      companyName:
        description: CompanyName is the name of the company associated with the role.
        type: string
      createdAt:
        description: CreatedAt is the timestamp indicating when the role entry was
          created.
        type: string
      firstname:
        description: Name is the name of the role.
        type: string
      id:
        description: ID is the unique identifier for the role.
        type: string
    type: object
  RolesIn:
    description: RolesIn represents the input structure for creating a new role.
    properties:
      name:
        description: Name is the name of the role. It is required and should be between
          2 and 40 characters.
        maxLength: 40
        minLength: 2
        type: string
    required:
    - name
    type: object
  RolesList:
    description: RolesList represents a simplified version of the role for listing
      purposes.
    properties:
      id:
        description: ID is the unique identifier for the role.
        type: string
      name:
        description: Name is the name of the role.
        type: string
    type: object
  RolesPagination:
    description: RolesPagination represents the paginated list of roles.
    properties:
      items:
        description: Items is a slice containing individual role details.
        items:
          $ref: '#/definitions/RolesTable'
        type: array
      limit:
        description: Limit is the maximum number of items per page in the pagination.
        type: integer
      page:
        description: Page is the current page number in the pagination.
        type: integer
      totalCount:
        description: TotalCount is the total number of roles in the entire list.
        type: integer
    type: object
  RolesTable:
    description: RolesTable represents a single role entry in a table.
    properties:
      createdAt:
        description: CreatedAt is the timestamp indicating when the role entry was
          created.
        type: string
      id:
        description: ID is the unique identifier for the role.
        type: string
      name:
        description: Name is the name of the role.
        type: string
    type: object
  Signin:
    description: Signin represents the information required for signing in.
    properties:
      email:
        description: Email is the email address of the user. It is required, should
          be a valid email, and maximum length is 255 characters.
        maxLength: 255
        type: string
      password:
        description: Password is the user's password. It is required, and its length
          should be between 10 and 255 characters.
        maxLength: 255
        minLength: 10
        type: string
    required:
    - email
    - password
    type: object
  Signup:
    description: Signup represents the account information for signing up.
    properties:
      companyName:
        description: CompanyName is the name of the user's company. It is required
          and should be between 2 and 255 characters.
        maxLength: 255
        minLength: 2
        type: string
      email:
        description: Email is the email address of the user. It is required, should
          be a valid email, and maximum length is 255 characters.
        maxLength: 255
        type: string
      firstName:
        description: Firstname is the first name of the user. It should be between
          3 and 30 characters.
        maxLength: 30
        minLength: 3
        type: string
      lastName:
        description: Lastname is the last name of the user. It should be between 3
          and 35 characters.
        maxLength: 35
        minLength: 3
        type: string
      password:
        description: Password is the user's password. It is required, and its length
          should be between 10 and 255 characters.
        maxLength: 255
        minLength: 10
        type: string
    required:
    - companyName
    - email
    - firstName
    - lastName
    - password
    type: object
  UsersCount:
    description: UsersCount represents the count of users.
    properties:
      count:
        description: Count is the number of users.
        type: integer
    type: object
  UsersDetails:
    description: UsersDetails represents detailed information about a specific user.
    properties:
      country:
        description: Country is the country of residence of the user.
        type: string
      createdAt:
        description: CreatedAt is the timestamp indicating when the user entry was
          created.
        type: string
      email:
        description: Email is the email address of the user.
        type: string
      firstname:
        description: Firstname is the first name of the user.
        type: string
      id:
        description: ID is the unique identifier for the user.
        type: string
      lastname:
        description: Lastname is the last name of the user.
        type: string
      status:
        description: Status is a boolean indicating the current status of the user.
        type: boolean
    type: object
  UsersIn:
    description: UsersIn represents the input structure for creating a new user.
    properties:
      companyID:
        description: CompanyID is the unique identifier for the company associated
          with the user. It is required.
        type: string
      email:
        description: Email is the email address of the user. It is required, should
          be a valid email, and maximum length is 255 characters.
        maxLength: 255
        type: string
      firstName:
        description: Firstname is the first name of the user. It is required and should
          be between 3 and 30 characters.
        maxLength: 30
        minLength: 3
        type: string
      lastName:
        description: Lastname is the last name of the user. It is required and should
          be between 3 and 35 characters.
        maxLength: 35
        minLength: 3
        type: string
      password:
        description: Password is the user's password. It is required, and its length
          should be between 10 and 255 characters.
        maxLength: 255
        minLength: 10
        type: string
    required:
    - companyID
    - email
    - firstName
    - lastName
    - password
    type: object
  UsersList:
    description: UsersList represents a simplified version of the user for listing
      purposes.
    properties:
      id:
        description: ID is the unique identifier for the user.
        type: string
      name:
        description: Name is the full name of the user.
        type: string
    type: object
  UsersPagination:
    description: UsersPagination represents the paginated list of users.
    properties:
      items:
        description: Items is a slice containing individual user details.
        items:
          $ref: '#/definitions/UsersTable'
        type: array
      limit:
        description: Limit is the maximum number of items per page in the pagination.
        type: integer
      page:
        description: Page is the current page number in the pagination.
        type: integer
      totalCount:
        description: TotalCount is the total number of users in the entire list.
        type: integer
    type: object
  UsersTable:
    description: UsersTable represents a single user entry in a table.
    properties:
      createdAt:
        description: CreatedAt is the timestamp indicating when the user entry was
          created.
        type: string
      email:
        description: Email is the email address of the user.
        type: string
      firstname:
        description: Firstname is the first name of the user.
        type: string
      id:
        description: ID is the unique identifier for the user.
        type: string
      lastname:
        description: Lastname is the last name of the user.
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: h.manai@tunisiancloud.com
    name: Hedi Manai
  description: A basic template for managing your project using Golang REST APIs.
  title: Project Name
  version: "0.1"
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticate and log in a user.
      parameters:
      - description: User query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Signin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoggedInResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: Signin
      tags:
      - Authentification
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create a new user account.
      parameters:
      - description: User query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Signup'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: Signup
      tags:
      - Authentification
  /companies:
    get:
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompaniesPagination'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      parameters:
      - description: Company query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CompanyIn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /companies/{ID}:
    delete:
      parameters:
      - description: Company ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      parameters:
      - description: Company ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompaniesDetails'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      parameters:
      - description: Company ID
        in: path
        name: ID
        required: true
        type: string
      - description: Company query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CompanyIn'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /notifications/{userID}:
    get:
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/NotificationsDetails'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /notifications/{userID}/{ID}:
    delete:
      parameters:
      - description: Company ID
        in: path
        name: userID
        required: true
        type: string
      - description: Notification ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Notification ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NotificationsDetails'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Notification ID
        in: path
        name: ID
        required: true
        type: string
      - description: Notification query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/NotificationsIn'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /notifications/{userID}/count:
    get:
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NotificationsCount'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /roles/{companyID}:
    get:
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RolesPagination'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: Role query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RolesIn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /roles/{companyID}/{ID}:
    delete:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: Role ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: Role ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RolesDetails'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: Role ID
        in: path
        name: ID
        required: true
        type: string
      - description: Role query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RolesIn'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /roles/{companyID}/count:
    get:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RolesCount'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /roles/{companyID}/list:
    get:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/RolesList'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /users/{companyID}:
    get:
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsersPagination'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: User query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UsersIn'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /users/{companyID}/{ID}:
    delete:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: User ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: User ID
        in: path
        name: ID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsersDetails'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      - description: User ID
        in: path
        name: ID
        required: true
        type: string
      - description: User query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UsersIn'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /users/{companyID}/count:
    get:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsersCount'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /users/{companyID}/list:
    get:
      parameters:
      - description: Company ID
        in: path
        name: companyID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/UsersList'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
